== main ==
fun main() {
    while(1 > 0) {
      2
    }
}
---------------------
L0:
    <START>                   
L2 [loop entry point]:
L5 [condition entry point]:
    r(1)                          PREV:[<START>, jmp(L2 [loop entry point])]
    r(0)                      
    call(>, compareTo)        
    jf(L3 [loop exit point])      NEXT:[read (Unit), r(2)]         
L4 [body entry point]:
    r(2)                      
    jmp(L2 [loop entry point])    NEXT:[r(1)]                      
L3 [loop exit point]:
    read (Unit)                   PREV:[jf(L3 [loop exit point])]
L1:
    <END>                         NEXT:[<SINK>]                    
error:
    <ERROR>                       PREV:[]
sink:
    <SINK>                        PREV:[<ERROR>, <END>]
=====================
== dowhile ==
fun dowhile() {
    do {return}
    while(1 > 0)
}
---------------------
L0:
    <START>                  
L2 [loop entry point]:
L4 [body entry point]:
    ret L1                       NEXT:[<END>]                    
L5 [condition entry point]:
-   r(1)                         PREV:[]
-   r(0)                         PREV:[]
-   call(>, compareTo)           PREV:[]
-   jt(L2 [loop entry point])    NEXT:[read (Unit), ret L1]          PREV:[]
L3 [loop exit point]:
-   read (Unit)                  PREV:[]
L1:
    <END>                        NEXT:[<SINK>]                       PREV:[ret L1]
error:
    <ERROR>                      PREV:[]
sink:
    <SINK>                       PREV:[<ERROR>, <END>]
=====================
